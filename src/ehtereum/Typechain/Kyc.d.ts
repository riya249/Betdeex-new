/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface KycInterface extends ethers.utils.Interface {
  functions: {
    "getIdentityByAddress(address)": FunctionFragment;
    "getIdentityByUsername(bytes32)": FunctionFragment;
    "getKycLevel2(address,address)": FunctionFragment;
    "isKycLevel1(address)": FunctionFragment;
    "isKycLevel2(address,address)": FunctionFragment;
    "isKycLevel3(address)": FunctionFragment;
    "isKycLevel4(address)": FunctionFragment;
    "isKycLevel5(address)": FunctionFragment;
    "resolveAddress(bytes32)": FunctionFragment;
    "resolveUsername(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getIdentityByAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getIdentityByUsername",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getKycLevel2",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "isKycLevel1", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isKycLevel2",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "isKycLevel3", values: [string]): string;
  encodeFunctionData(functionFragment: "isKycLevel4", values: [string]): string;
  encodeFunctionData(functionFragment: "isKycLevel5", values: [string]): string;
  encodeFunctionData(
    functionFragment: "resolveAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "resolveUsername",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getIdentityByAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIdentityByUsername",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getKycLevel2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKycLevel1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKycLevel2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKycLevel3",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKycLevel4",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isKycLevel5",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "resolveAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "resolveUsername",
    data: BytesLike
  ): Result;

  events: {};
}

export class Kyc extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: KycInterface;

  functions: {
    getIdentityByAddress(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    "getIdentityByAddress(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    getIdentityByUsername(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    "getIdentityByUsername(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    getKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    "getKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    isKycLevel1(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isKycLevel3(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isKycLevel4(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel4(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    isKycLevel5(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "isKycLevel5(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    resolveAddress(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "resolveAddress(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    resolveUsername(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "resolveUsername(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  getIdentityByAddress(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<{
    username: string;
    owner: string;
    kycApprovedDetailsIPFS: string;
    profileDetailsIPFS: string;
    level1: number;
    level3: number;
    level4: number;
    level5: number;
    0: string;
    1: string;
    2: string;
    3: string;
    4: number;
    5: number;
    6: number;
    7: number;
  }>;

  "getIdentityByAddress(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<{
    username: string;
    owner: string;
    kycApprovedDetailsIPFS: string;
    profileDetailsIPFS: string;
    level1: number;
    level3: number;
    level4: number;
    level5: number;
    0: string;
    1: string;
    2: string;
    3: string;
    4: number;
    5: number;
    6: number;
    7: number;
  }>;

  getIdentityByUsername(
    _username: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    username: string;
    owner: string;
    kycApprovedDetailsIPFS: string;
    profileDetailsIPFS: string;
    level1: number;
    level3: number;
    level4: number;
    level5: number;
    0: string;
    1: string;
    2: string;
    3: string;
    4: number;
    5: number;
    6: number;
    7: number;
  }>;

  "getIdentityByUsername(bytes32)"(
    _username: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    username: string;
    owner: string;
    kycApprovedDetailsIPFS: string;
    profileDetailsIPFS: string;
    level1: number;
    level3: number;
    level4: number;
    level5: number;
    0: string;
    1: string;
    2: string;
    3: string;
    4: number;
    5: number;
    6: number;
    7: number;
  }>;

  getKycLevel2(
    _wallet: string,
    _platform: string,
    overrides?: CallOverrides
  ): Promise<number>;

  "getKycLevel2(address,address)"(
    _wallet: string,
    _platform: string,
    overrides?: CallOverrides
  ): Promise<number>;

  isKycLevel1(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

  "isKycLevel1(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isKycLevel2(
    _wallet: string,
    _platform: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isKycLevel2(address,address)"(
    _wallet: string,
    _platform: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isKycLevel3(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

  "isKycLevel3(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isKycLevel4(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

  "isKycLevel4(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isKycLevel5(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

  "isKycLevel5(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  resolveAddress(
    _username: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "resolveAddress(bytes32)"(
    _username: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  resolveUsername(_wallet: string, overrides?: CallOverrides): Promise<string>;

  "resolveUsername(address)"(
    _wallet: string,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    getIdentityByAddress(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    "getIdentityByAddress(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    getIdentityByUsername(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    "getIdentityByUsername(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      username: string;
      owner: string;
      kycApprovedDetailsIPFS: string;
      profileDetailsIPFS: string;
      level1: number;
      level3: number;
      level4: number;
      level5: number;
      0: string;
      1: string;
      2: string;
      3: string;
      4: number;
      5: number;
      6: number;
      7: number;
    }>;

    getKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<number>;

    "getKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<number>;

    isKycLevel1(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isKycLevel3(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isKycLevel4(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

    "isKycLevel4(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isKycLevel5(_wallet: string, overrides?: CallOverrides): Promise<boolean>;

    "isKycLevel5(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    resolveAddress(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "resolveAddress(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    resolveUsername(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "resolveUsername(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    getIdentityByAddress(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIdentityByAddress(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIdentityByUsername(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIdentityByUsername(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isKycLevel1(_wallet: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isKycLevel3(_wallet: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isKycLevel4(_wallet: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isKycLevel4(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isKycLevel5(_wallet: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isKycLevel5(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    resolveAddress(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "resolveAddress(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    resolveUsername(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "resolveUsername(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getIdentityByAddress(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIdentityByAddress(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIdentityByUsername(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIdentityByUsername(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isKycLevel1(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel1(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isKycLevel2(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel2(address,address)"(
      _wallet: string,
      _platform: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isKycLevel3(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel3(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isKycLevel4(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel4(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isKycLevel5(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isKycLevel5(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    resolveAddress(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "resolveAddress(bytes32)"(
      _username: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    resolveUsername(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "resolveUsername(address)"(
      _wallet: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
